#!/bin/bash
# Set GAMEDIR to the current directory and set logfile
GAMEDIR="$PWD"
LOGFILE="$GAMEDIR/patchlog.txt"

# Redirect output and error to the log file
exec > >(tee -a "$LOGFILE") 2>&1
echo "GAMEDIR is set to: $GAMEDIR"

# Exports
export DATADIR="$GAMEDIR/assets"
export DATAFILE="wuppo.port"
export LD_LIBRARY_PATH="$GAMEDIR/lib:$GAMEDIR/tools/libs:$LD_LIBRARY_PATH"
export PATH="$GAMEDIR/tools:$PATH"

# Permissions
chmod 666 /dev/uinput

cd "$GAMEDIR"

# Patch Wuppo
if [ -f "assets/data.win" ]; then
    checksum=$(md5sum "assets/data.win" | awk '{print $1}')
    
    if [ "$checksum" = "bab69cd8c23c9de241e64e37430d9b0b" ]; then
        echo "Detected correct version of Wuppo. Using xdelta to patch the game with the Wuppo patch..."
        sleep 2
        if ! tools/xdelta3 -d -s "assets/data.win" -f "./patch/wuppo.xdelta" "assets/game.droid"; then
            echo "Patching process failed!" # Failure in patching
            exit 1
        else
            echo "Wuppo xdelta patch successful."
            sleep 2
            rm "assets/data.win" || { echo "Patching process failed!"; exit 1; }
        fi
    else
        echo "Unknown game version. No patch applied."
        echo "Patching process failed!" # Failure due to unknown version
        exit 1
    fi
else
    echo "data.win file not found."
    echo "Patching process failed!" # Failure due to missing file
    exit 1
fi

# Ensure 'saves' directory exists 
echo "Ensuring saves directory exists and copying content folder..."
mkdir -p "./saves"  

# Moving preset/Wuppo_config.ini to saves if it exists
if [ -f "preset/Wuppo_config.ini" ]; then
    echo "Moving Wuppo_config.ini to saves..."
    if ! mv "preset/Wuppo_config.ini" "./saves/"; then
        echo "Failed to move Wuppo_config.ini. Continuing process..."
    fi
fi

# Check if 'assets/content' directory exists, and copy it to 'saves' if it does
if [ -d "assets/content" ]; then
    echo "Copying content folder from assets to saves..."
    if ! cp -r "assets/content" "./saves/"; then
        echo "Failed to copy content to saves."
        echo "Patching process failed!" # Failure in copying content
        exit 1
    fi
else
    echo "'assets/content' directory does not exist. Skipping copy."
fi

# Creating ZIP archive of the assets directory with no compression
if [ -d "./assets/" ]; then
    echo "Creating port archive: $DATAFILE. This will take a while."
    if ! zip -rq -0 "$DATAFILE" "./assets/"; then
        echo "Patching process failed!" # Failure in creating the ZIP archive
        exit 1
    fi
    # Clean up the assets directory and create saves directory
    rm -rf ./assets
else
    echo "Assets directory does not exist. Skipping archive creation."
fi


# Completion message
echo "Process completed successfully."
