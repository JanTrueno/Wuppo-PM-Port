#!/bin/bash
# Set GAMEDIR to the current directory and set logfile
GAMEDIR="$PWD"
LOGFILE="$GAMEDIR/patchlog.txt"

# Redirect output and error to the log file
exec > >(tee -a "$LOGFILE") 2>&1
echo "GAMEDIR is set to: $GAMEDIR"

# Exports
export DATADIR="$GAMEDIR/gamedata"
export LD_LIBRARY_PATH="$GAMEDIR/lib:$GAMEDIR/tools/libs:$LD_LIBRARY_PATH"
export TOOLDIR="$GAMEDIR/tools"
export TMPDIR="$GAMEDIR/tmp"
export PATH="$GAMEDIR/tools:$PATH"

# Permissions
chmod 666 /dev/uinput
chmod 777 "$TOOLDIR/gmKtool.py"
chmod 777 "$TOOLDIR/oggenc"

cd "$GAMEDIR"

# Patch Wuppo
if [ -f "gamedata/data.win" ]; then
    checksum=$(md5sum "gamedata/data.win" | awk '{print $1}')
    
    if [ "$checksum" = "bab69cd8c23c9de241e64e37430d9b0b" ]; then
        echo "Detected correct version of Wuppo. Using xdelta to patch the game with the Wuppo patch..."
        sleep 2
        if tools/xdelta3 -d -s "gamedata/data.win" -f "./patch/wuppo.xdelta" "gamedata/game.droid"; then
            echo "Wuppo xdelta patch successful."
            sleep 2
            rm "gamedata/data.win"
        else
            echo "Wuppo xdelta patch unsuccessful. Continuing process..."
        fi
    else
        echo "Unknown game version. No patch applied. Continuing process..."
    fi
else
    echo "data.win file not found. Continuing process..."
fi

# Preset config
# Moving preset/Wuppo_config.ini to gamedata if it exists
if [ -f "preset/Wuppo_config.ini" ]; then
    echo "Moving Wuppo_config.ini to gamedata..."
    if ! mv "preset/Wuppo_config.ini" "./gamedata/"; then
        echo "Failed to move Wuppo_config.ini. Continuing process..."
    fi
fi

# Audio and file packing
# Check if there are .ogg, .ttf files or specified folders in ./gamedata
if [ -n "$(ls ./gamedata/*.ogg 2>/dev/null)" ] || \
   [ -n "$(ls ./gamedata/*.ttf 2>/dev/null)" ] || \
   [ -d "./gamedata/dialogue" ] || \
   [ -d "./gamedata/other" ]; then
   
    # Create ./assets directory if it doesn't exist
    mkdir -p ./assets || echo "Failed to create ./assets directory. Continuing process..."

    # Move all .ogg files from ./gamedata to ./assets
    if [ -n "$(ls ./gamedata/*.ogg 2>/dev/null)" ]; then
        if ! mv ./gamedata/*.ogg ./assets/; then
            echo "Failed to move .ogg files. Continuing process..."
        fi
    fi

    # Move all .ttf files from ./gamedata to ./assets
    if [ -n "$(ls ./gamedata/*.ttf 2>/dev/null)" ]; then
        if ! mv ./gamedata/*.ttf ./assets/; then
            echo "Failed to move .ttf files. Continuing process..."
        fi
    fi

    # Move specified folders from ./gamedata to ./assets
    for folder in dialogue other; do
        if [ -d "./gamedata/$folder" ]; then
            if ! mv "./gamedata/$folder" ./assets/; then
                echo "Failed to move folder $folder. Continuing process..."
            fi
        fi
    done

    # Zip the contents of ./assets into ./wuppo.apk
    if ! zip -r -0 ./wuppo.apk ./assets/; then
        echo "Failed to zip files into wuppo.apk. Continuing process..."
    else
        echo "Successfully created wuppo.apk."
    fi

    # Remove the ./assets directory after zipping
    if ! rm -Rf "$GAMEDIR/assets/"; then
        echo "Failed to remove ./assets directory. Continuing process..."
    fi

    # Final completion message
    echo "Patching process complete!"
else
    echo "No .ogg, .ttf files or specified folders found in ./gamedata."
fi
